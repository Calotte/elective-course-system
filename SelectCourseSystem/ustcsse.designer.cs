#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace SelectCourseSystem
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ustcsse")]
	public partial class ustcsseDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertStudent(Student instance);
    partial void UpdateStudent(Student instance);
    partial void DeleteStudent(Student instance);
    partial void InsertSelectInfo(SelectInfo instance);
    partial void UpdateSelectInfo(SelectInfo instance);
    partial void DeleteSelectInfo(SelectInfo instance);
    partial void InsertCourseInfo(CourseInfo instance);
    partial void UpdateCourseInfo(CourseInfo instance);
    partial void DeleteCourseInfo(CourseInfo instance);
    #endregion
		
		public ustcsseDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["ustcsseConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ustcsseDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ustcsseDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ustcsseDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ustcsseDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Student> Student
		{
			get
			{
				return this.GetTable<Student>();
			}
		}
		
		public System.Data.Linq.Table<SelectInfo> SelectInfo
		{
			get
			{
				return this.GetTable<SelectInfo>();
			}
		}
		
		public System.Data.Linq.Table<CourseInfo> CourseInfo
		{
			get
			{
				return this.GetTable<CourseInfo>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Student")]
	public partial class Student : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _StudentID;
		
		private string _psw;
		
		private string _Name;
		
		private string _SchoolYear;
		
		private string _MajorType;
		
		private int _currentCredit;
		
		private int _maxCredit;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStudentIDChanging(string value);
    partial void OnStudentIDChanged();
    partial void OnpswChanging(string value);
    partial void OnpswChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSchoolYearChanging(string value);
    partial void OnSchoolYearChanged();
    partial void OnMajorTypeChanging(string value);
    partial void OnMajorTypeChanged();
    partial void OncurrentCreditChanging(int value);
    partial void OncurrentCreditChanged();
    partial void OnmaxCreditChanging(int value);
    partial void OnmaxCreditChanged();
    #endregion
		
		public Student()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string StudentID
		{
			get
			{
				return this._StudentID;
			}
			set
			{
				if ((this._StudentID != value))
				{
					this.OnStudentIDChanging(value);
					this.SendPropertyChanging();
					this._StudentID = value;
					this.SendPropertyChanged("StudentID");
					this.OnStudentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_psw", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string psw
		{
			get
			{
				return this._psw;
			}
			set
			{
				if ((this._psw != value))
				{
					this.OnpswChanging(value);
					this.SendPropertyChanging();
					this._psw = value;
					this.SendPropertyChanged("psw");
					this.OnpswChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SchoolYear", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string SchoolYear
		{
			get
			{
				return this._SchoolYear;
			}
			set
			{
				if ((this._SchoolYear != value))
				{
					this.OnSchoolYearChanging(value);
					this.SendPropertyChanging();
					this._SchoolYear = value;
					this.SendPropertyChanged("SchoolYear");
					this.OnSchoolYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MajorType", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MajorType
		{
			get
			{
				return this._MajorType;
			}
			set
			{
				if ((this._MajorType != value))
				{
					this.OnMajorTypeChanging(value);
					this.SendPropertyChanging();
					this._MajorType = value;
					this.SendPropertyChanged("MajorType");
					this.OnMajorTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_currentCredit", DbType="Int NOT NULL")]
		public int currentCredit
		{
			get
			{
				return this._currentCredit;
			}
			set
			{
				if ((this._currentCredit != value))
				{
					this.OncurrentCreditChanging(value);
					this.SendPropertyChanging();
					this._currentCredit = value;
					this.SendPropertyChanged("currentCredit");
					this.OncurrentCreditChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maxCredit", DbType="Int NOT NULL")]
		public int maxCredit
		{
			get
			{
				return this._maxCredit;
			}
			set
			{
				if ((this._maxCredit != value))
				{
					this.OnmaxCreditChanging(value);
					this.SendPropertyChanging();
					this._maxCredit = value;
					this.SendPropertyChanged("maxCredit");
					this.OnmaxCreditChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SelectInfo")]
	public partial class SelectInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _StudentID;
		
		private string _CourseID;
		
		private byte _IsSelected;
		
		private string _MajorType;
		
		private string _CourseName;
		
		private int _Credit;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStudentIDChanging(string value);
    partial void OnStudentIDChanged();
    partial void OnCourseIDChanging(string value);
    partial void OnCourseIDChanged();
    partial void OnIsSelectedChanging(byte value);
    partial void OnIsSelectedChanged();
    partial void OnMajorTypeChanging(string value);
    partial void OnMajorTypeChanged();
    partial void OnCourseNameChanging(string value);
    partial void OnCourseNameChanged();
    partial void OnCreditChanging(int value);
    partial void OnCreditChanged();
    #endregion
		
		public SelectInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string StudentID
		{
			get
			{
				return this._StudentID;
			}
			set
			{
				if ((this._StudentID != value))
				{
					this.OnStudentIDChanging(value);
					this.SendPropertyChanging();
					this._StudentID = value;
					this.SendPropertyChanged("StudentID");
					this.OnStudentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CourseID
		{
			get
			{
				return this._CourseID;
			}
			set
			{
				if ((this._CourseID != value))
				{
					this.OnCourseIDChanging(value);
					this.SendPropertyChanging();
					this._CourseID = value;
					this.SendPropertyChanged("CourseID");
					this.OnCourseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSelected", DbType="TinyInt NOT NULL")]
		public byte IsSelected
		{
			get
			{
				return this._IsSelected;
			}
			set
			{
				if ((this._IsSelected != value))
				{
					this.OnIsSelectedChanging(value);
					this.SendPropertyChanging();
					this._IsSelected = value;
					this.SendPropertyChanged("IsSelected");
					this.OnIsSelectedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MajorType", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MajorType
		{
			get
			{
				return this._MajorType;
			}
			set
			{
				if ((this._MajorType != value))
				{
					this.OnMajorTypeChanging(value);
					this.SendPropertyChanging();
					this._MajorType = value;
					this.SendPropertyChanged("MajorType");
					this.OnMajorTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CourseName
		{
			get
			{
				return this._CourseName;
			}
			set
			{
				if ((this._CourseName != value))
				{
					this.OnCourseNameChanging(value);
					this.SendPropertyChanging();
					this._CourseName = value;
					this.SendPropertyChanged("CourseName");
					this.OnCourseNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Credit", DbType="Int NOT NULL")]
		public int Credit
		{
			get
			{
				return this._Credit;
			}
			set
			{
				if ((this._Credit != value))
				{
					this.OnCreditChanging(value);
					this.SendPropertyChanging();
					this._Credit = value;
					this.SendPropertyChanged("Credit");
					this.OnCreditChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CourseInfo")]
	public partial class CourseInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CourseID;
		
		private string _CourseName;
		
		private int _Credit;
		
		private string _Room;
		
		private string _TeacherName;
		
		private string _TimeAndRoom;
		
		private System.DateTime _ElectiveStartTime;
		
		private System.DateTime _ElectiveEndTime;
		
		private int _CurrentNumber;
		
		private int _MaxNumber;
		
		private string _MajorType;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCourseIDChanging(string value);
    partial void OnCourseIDChanged();
    partial void OnCourseNameChanging(string value);
    partial void OnCourseNameChanged();
    partial void OnCreditChanging(int value);
    partial void OnCreditChanged();
    partial void OnRoomChanging(string value);
    partial void OnRoomChanged();
    partial void OnTeacherNameChanging(string value);
    partial void OnTeacherNameChanged();
    partial void OnTimeAndRoomChanging(string value);
    partial void OnTimeAndRoomChanged();
    partial void OnElectiveStartTimeChanging(System.DateTime value);
    partial void OnElectiveStartTimeChanged();
    partial void OnElectiveEndTimeChanging(System.DateTime value);
    partial void OnElectiveEndTimeChanged();
    partial void OnCurrentNumberChanging(int value);
    partial void OnCurrentNumberChanged();
    partial void OnMaxNumberChanging(int value);
    partial void OnMaxNumberChanged();
    partial void OnMajorTypeChanging(string value);
    partial void OnMajorTypeChanged();
    #endregion
		
		public CourseInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CourseID
		{
			get
			{
				return this._CourseID;
			}
			set
			{
				if ((this._CourseID != value))
				{
					this.OnCourseIDChanging(value);
					this.SendPropertyChanging();
					this._CourseID = value;
					this.SendPropertyChanged("CourseID");
					this.OnCourseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CourseName
		{
			get
			{
				return this._CourseName;
			}
			set
			{
				if ((this._CourseName != value))
				{
					this.OnCourseNameChanging(value);
					this.SendPropertyChanging();
					this._CourseName = value;
					this.SendPropertyChanged("CourseName");
					this.OnCourseNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Credit", DbType="Int NOT NULL")]
		public int Credit
		{
			get
			{
				return this._Credit;
			}
			set
			{
				if ((this._Credit != value))
				{
					this.OnCreditChanging(value);
					this.SendPropertyChanging();
					this._Credit = value;
					this.SendPropertyChanged("Credit");
					this.OnCreditChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Room", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Room
		{
			get
			{
				return this._Room;
			}
			set
			{
				if ((this._Room != value))
				{
					this.OnRoomChanging(value);
					this.SendPropertyChanging();
					this._Room = value;
					this.SendPropertyChanged("Room");
					this.OnRoomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TeacherName
		{
			get
			{
				return this._TeacherName;
			}
			set
			{
				if ((this._TeacherName != value))
				{
					this.OnTeacherNameChanging(value);
					this.SendPropertyChanging();
					this._TeacherName = value;
					this.SendPropertyChanged("TeacherName");
					this.OnTeacherNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeAndRoom", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string TimeAndRoom
		{
			get
			{
				return this._TimeAndRoom;
			}
			set
			{
				if ((this._TimeAndRoom != value))
				{
					this.OnTimeAndRoomChanging(value);
					this.SendPropertyChanging();
					this._TimeAndRoom = value;
					this.SendPropertyChanged("TimeAndRoom");
					this.OnTimeAndRoomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ElectiveStartTime", DbType="DateTime NOT NULL")]
		public System.DateTime ElectiveStartTime
		{
			get
			{
				return this._ElectiveStartTime;
			}
			set
			{
				if ((this._ElectiveStartTime != value))
				{
					this.OnElectiveStartTimeChanging(value);
					this.SendPropertyChanging();
					this._ElectiveStartTime = value;
					this.SendPropertyChanged("ElectiveStartTime");
					this.OnElectiveStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ElectiveEndTime", DbType="DateTime NOT NULL")]
		public System.DateTime ElectiveEndTime
		{
			get
			{
				return this._ElectiveEndTime;
			}
			set
			{
				if ((this._ElectiveEndTime != value))
				{
					this.OnElectiveEndTimeChanging(value);
					this.SendPropertyChanging();
					this._ElectiveEndTime = value;
					this.SendPropertyChanged("ElectiveEndTime");
					this.OnElectiveEndTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentNumber", DbType="Int NOT NULL")]
		public int CurrentNumber
		{
			get
			{
				return this._CurrentNumber;
			}
			set
			{
				if ((this._CurrentNumber != value))
				{
					this.OnCurrentNumberChanging(value);
					this.SendPropertyChanging();
					this._CurrentNumber = value;
					this.SendPropertyChanged("CurrentNumber");
					this.OnCurrentNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxNumber", DbType="Int NOT NULL")]
		public int MaxNumber
		{
			get
			{
				return this._MaxNumber;
			}
			set
			{
				if ((this._MaxNumber != value))
				{
					this.OnMaxNumberChanging(value);
					this.SendPropertyChanging();
					this._MaxNumber = value;
					this.SendPropertyChanged("MaxNumber");
					this.OnMaxNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MajorType", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MajorType
		{
			get
			{
				return this._MajorType;
			}
			set
			{
				if ((this._MajorType != value))
				{
					this.OnMajorTypeChanging(value);
					this.SendPropertyChanging();
					this._MajorType = value;
					this.SendPropertyChanged("MajorType");
					this.OnMajorTypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
